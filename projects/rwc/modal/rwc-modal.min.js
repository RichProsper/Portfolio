class RWC_Modal extends HTMLElement{constructor(){super(),this.init()}init(){this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(this.getTemplate().content.cloneNode(!0)),this.Modal=this.shadowRoot.querySelector(".modal")}getTemplate(){const t=document.createElement("template");return t.innerHTML='\n            <link rel="stylesheet" href="modal.min.css">\n\n            <div class="modal" aria-modal="true" role="dialog">\n                <div class="content">\n                    <div class="header">\n                        <h3><slot name="heading" /></h3>\n                        <button type="button" class="close">\n                            <span>&times;</span>\n                        </button>\n                    </div>\n                    <div class="body">\n                        <div class="body-content">\n                            <slot name="body-content" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',t}connectedCallback(){if(this.Modal.addEventListener("click",(function(t){t.target===this&&this.classList.remove("open")})),this.shadowRoot.querySelector(".close").addEventListener("click",(()=>{this.Modal.classList.remove("open")})),this.getAttribute("modal_id")){document.querySelector(`[modal_id="${this.getAttribute("modal_id")}"]`).addEventListener("click",(()=>{this.Modal.classList.add("open")}))}this.getAttribute("modal_outline_color")&&(this.Modal.firstElementChild.style.borderColor=this.getAttribute("modal_outline_color"))}}window.customElements.define("rwc-modal",RWC_Modal);